{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","console","log","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab709081.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color ,  text , onClick}) => {\r\n    return (\r\n    <button onClick = {onClick} style = {{backgroundColor:color}} className = 'btn'> {text} </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color : 'blacks',\r\n}\r\nButton.propTypes = {\r\n    text : PropTypes.string , \r\n    color : PropTypes.string ,\r\n    onClick : PropTypes.func\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button.js'\r\n\r\nconst Header = ({title , onAdd , showAdd}) => {\r\n    // const onClick =() => {\r\n    //     console.log('Add Reminder');\r\n    // }\r\n    return (\r\n        <header className = 'header'>\r\n            <h1>{title}</h1>\r\n            <Button color = {showAdd ? 'grey' : 'black'} text = {showAdd ? 'close' : 'Add+'}\r\n            onClick = {onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title : 'Todo tracker' ,\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\nconst Task = ({task , onDelete , onToggle}) => {\r\n    return (\r\n        <div className = {`task ${task.reminder ? 'reminder': ''}`} onDoubleClick = {() => onToggle(task.id)}>\r\n            <h3>\r\n                \r\n                \r\n                {task.text} \r\n                <FaTimes style={{color:'red'}}\r\n                onClick = {() => onDelete(task.id)}\r\n                \r\n                />\r\n            </h3>\r\n            <p>{task.day}</p> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks , onDelete , onToggle}) => {\r\n  return ( \r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task key={task.id} task = {task} onDelete = {onDelete} onToggle = {onToggle}/>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks","import { useState } from \"react\"\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text , setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault()\r\n        \r\n        if(!text ){\r\n            alert(\"pls add a task\")\r\n            return\r\n        }\r\n        if(!day){\r\n            alert(\"pls add a day and time\")\r\n            return\r\n        } \r\n        // if(!reminder){\r\n        //     alert(\"pls add a reminder\")\r\n        //     return\r\n        // }\r\n        onAdd({text,day,reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n\r\n    }\r\n    return (\r\n        <form className = 'add-form' onSubmit = {onSubmit}>\r\n            <div className = 'form-control'>\r\n            <label>Task</label><input type = 'text' placeholder=  'Add task' value = {text} onChange = {(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className = 'form-control'>\r\n            <label>Day & date </label><input type = 'text' placeholder=  'Add Day & Date' value = {day} onChange = {(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className = 'form-control form-control-check'>\r\n            <label>Set reminder</label><input type = 'checkbox' checked = {reminder} value = {reminder} onChange = {(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input className ='btn btn-block' type = 'submit' value = 'Save Task' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import {useState} from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks , setTasks ] =  useState([\n    {\n        id : 1 ,\n        text : 'Appointment' ,\n        day : 'Sep 24 at 12:00 PM' ,\n        reminder : true ,\n\n    },\n    {\n        id : 2 ,\n        text : 'Work' ,\n        day : 'Sep 24 at 4:00 PM' ,\n        reminder : true ,\n\n    },\n    {\n        id : 3 ,\n        text : 'Restaurant' ,\n        day : 'Sep 24 at 8:00 PM' ,\n        reminder : false ,\n\n    }\n  ]);\nconst addtasks = (task) => {\n  console.log( 'Task added',task)\n  const id = Math.floor(Math.random() * 10000)+ 1\n  console.log(id)\n  const newTask = {id , ...task}\n  setTasks([...tasks , newTask])\n}\n\nconst deleteTask = (id) => {\n  console.log('delete' ,id)\n  setTasks(tasks.filter((tasks)=>tasks.id !== id))\n}\n\nconst Togglereminder = (id) => {\n  console.log(id)\n  setTasks(tasks.map((task) =>task.id === id ? {...task , reminder : !task.reminder }:task))\n}\n\nreturn(\n    <div className='container'>\n     <Header onAdd = {() => setShowAddTask (!showAddTask)} showAdd = {showAddTask}/>\n     {showAddTask && <AddTask onAdd = {addtasks}/>}\n     {tasks.length > 0 ? <Tasks tasks={tasks} onDelete = {deleteTask} onToggle = {Togglereminder}/>  : 'No tasks assigned'} \n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}